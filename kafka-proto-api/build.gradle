plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'java-library-distribution'
    id "com.google.protobuf" version "0.8.0"
}

group 'pcosta'
version '1.0-SNAPSHOT'

ext {
    springVersion = '1.2.' +
            '' +
            '3.RELEASE'
    protoVersion = '3.1.0'
    kafkaMsgVersion = '1.0'
}

repositories {
    mavenCentral()
    mavenLocal()
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.1.0' }
}

sourceSets {
    kafkaProto {
        proto { srcDir 'src/kafkaProto' }
    }
    api {
        java.srcDir file('src/api/java')
    }
    main {
        compileClasspath += kafkaProto.output + api.output
        java.srcDirs 'build/generated'
        java.srcDir file('src/main/java')
        resources.srcDir file('src/main/resources')
    }
    configuration {
        compileClasspath += api.output
        java.srcDir file('src/configuration/java')
        resources.srcDir file('src/configuration/resources')
    }
    spring {
        compileClasspath += api.output + configuration.output + main.output
        java.srcDir file('src/spring/java')
        resources.srcDir file('src/spring/resources')
    }
    testProto {
        proto { srcDir 'src/testProto' }
    }
    test {
        compileClasspath += testProto.output + api.output + spring.output + configuration.output + kafkaProto.output
        runtimeClasspath += testProto.output + api.output + spring.runtimeClasspath + configuration.output + kafkaProto.output
        java.srcDirs 'build/generated'
        java.srcDir file('src/test/java')
        resources.srcDir file('src/test/resources')
    }
}

dependencies {
    // Protobuf dependencies
    compile "com.google.protobuf:protobuf-java:$protoVersion"
    apiCompile "com.google.protobuf:protobuf-java:$protoVersion"
    configurationCompile "com.google.protobuf:protobuf-java:$protoVersion"
    springCompile "com.google.protobuf:protobuf-java:$protoVersion"
    kafkaProtoCompile "com.google.protobuf:protobuf-java:$protoVersion"
    testProtoCompile "com.google.protobuf:protobuf-java:$protoVersion"
    testCompile "com.google.protobuf:protobuf-java:$protoVersion"

    // Spring dependencies
    apiCompile "org.springframework.kafka:spring-kafka:$springVersion"
    testCompile "org.springframework.kafka:spring-kafka:$springVersion"
    compile "org.springframework.kafka:spring-kafka:$springVersion"
    springCompile "org.springframework.kafka:spring-kafka:$springVersion"

    // Javax inject dependencies
    // JAVA_HOME env var must be defined for the IDE / Gradle to find tools.jar
    springCompile files("${System.properties['java.home']}/../lib/tools.jar")
    springCompile 'javax.inject:javax.inject:1'
    compile 'javax.inject:javax.inject:1'

    // logging dependencies
    compile 'org.slf4j:slf4j-api:1.7.7'
    springCompile 'org.slf4j:slf4j-api:1.7.7'
    configurationCompile 'org.slf4j:slf4j-api:1.7.7'

    // testing dependencies
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'com.google.testing.compile:compile-testing:0.6'
    testCompile 'org.springframework:spring-context:4.0.9.RELEASE'
    testCompile "org.springframework.kafka:spring-kafka-test:$springVersion"
}

//Configure Jar archive and Manifest
jar.manifest.attributes("Implementation-Title": project.name, "Implementation-Version": version)
allprojects { sourceCompatibility = 1.8 }