plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'java-library-distribution'
    id 'ru.vyarus.pom' version '1.2.0'
    id "com.google.protobuf" version "0.8.0"
}

description 'API for Protobuf exchanging using Kafka and Spring'
group 'com.github.pscosta'
version '1.0.0-SNAPSHOT'

ext {
    springVersion = '1.2.3.RELEASE'
    protoVersion = '3.1.0'
}

repositories {
    mavenCentral()
    mavenLocal()
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.1.0' }
}

sourceSets {
    main {
        proto { srcDir 'src/main/resources/proto' }
        java.srcDirs 'build/generated'
        java.srcDir file('src/main/java')
        resources.srcDir file('src/main/resources')
    }
    test {
        compileClasspath += main.output
        runtimeClasspath += main.runtimeClasspath
        proto { srcDir 'src/test/resources/proto' }
        java.srcDirs 'build/generated'
        java.srcDir file('src/test/java')
        resources.srcDir file('src/test/resources')
    }
}

dependencies {
    // Protobuf dependencies
    compile "com.google.protobuf:protobuf-java:$protoVersion"
    // Spring dependencies
    compile "org.springframework.kafka:spring-kafka:$springVersion"
    // JAVA_HOME env var must be defined for the IDE / Gradle to find tools.jar
    compile files("${System.properties['java.home']}/../lib/tools.jar")
    // Javax inject dependencies
    compile 'javax.inject:javax.inject:1'
    // logging dependencies
    compile 'org.slf4j:slf4j-api:1.7.7'

    // testing dependencies
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'com.google.testing.compile:compile-testing:0.6'
    testCompile 'org.springframework:spring-context:4.0.9.RELEASE'
    testCompile "com.google.protobuf:protobuf-java:$protoVersion"
    testCompile "org.springframework.kafka:spring-kafka:$springVersion"
    testCompile "org.springframework.kafka:spring-kafka-test:$springVersion"
}

task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allJava
}
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
jar {
    baseName = project.name
    version = project.version
    manifest { attributes("Implementation-Title": project.name, "Implementation-Version": version) }
    exclude("**/*.proto")
}
artifacts {
    archives sourceJar
    archives javadocJar
}

pom {
    licenses {
        license {
            name "The MIT License"
            url "http://www.opensource.org/licenses/MIT"
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'pscosta'
            name 'Pedro Costa'
            email 'pedrosalvacaocosta@gmail.com'
        }
    }
    scm {
        url 'https://github.com/pscosta/kafka-proto-api'
        connection 'scm:git:git://github.com/pscosta/kafka-proto-api.git'
        developerConnection 'scm:git:ssh://github.com:pscosta/kafka-proto-api.git'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url "http://some-nexus.com/nexus/content/repositories/releases"
        }
    }
}

allprojects { sourceCompatibility = 1.8 }